{
  "stats": {
    "suites": 1,
    "tests": 13,
    "passes": 8,
    "pending": 0,
    "failures": 5,
    "start": "2018-10-11T20:08:07.512Z",
    "end": "2018-10-11T20:08:07.558Z",
    "duration": 46,
    "testsRegistered": 13,
    "passPercent": 61.5,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "warning",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "74658897-4bae-4f9e-b982-7498eb8c7a74",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "d45fa756-a04c-46f1-906a-1a7a18818989",
        "title": "Adding numbers",
        "fullFile": "/Users/juancastellon/Documents/test/test/test.js",
        "file": "/test/test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return 3 as result of the sum of 1 and 2",
            "fullTitle": "Adding numbers should return 3 as result of the sum of 1 and 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "suma.sum.should.equal(3);",
            "err": {},
            "isRoot": false,
            "uuid": "3b0d27ef-cdad-4f6a-8a0f-d9c115ab2b62",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return 12 as result of the sum of 10 and 2",
            "fullTitle": "Adding numbers should return 12 as result of the sum of 10 and 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "suma.num1 = 10\nsuma.sum.should.equal(12);",
            "err": {},
            "isRoot": false,
            "uuid": "58a8b852-128f-422e-bf96-de98e807a334",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return 12 as result of the sum of 10 and 2",
            "fullTitle": "Adding numbers should return 12 as result of the sum of 10 and 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "suma.num2 = 3\nsuma.sum.should.equal(13);",
            "err": {},
            "isRoot": false,
            "uuid": "5e38f23e-412e-48be-97e4-436da87899f1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return error",
            "fullTitle": "Adding numbers should return error",
            "timedOut": false,
            "duration": 2,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "suma.sum.should.equal(11);",
            "err": {
              "message": "AssertionError: expected 13 to equal 11",
              "estack": "AssertionError: expected 13 to equal 11\n    at Context.<anonymous> (test/test.js:22:25)",
              "diff": "- 13\n+ 11\n"
            },
            "isRoot": false,
            "uuid": "e7c59b3a-d96a-4e87-8b33-0806a3e2a6db",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return the first number",
            "fullTitle": "Adding numbers should return the first number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "suma.num1.should.equal(10);",
            "err": {},
            "isRoot": false,
            "uuid": "cdacbbc1-eded-44d2-8aa3-de7f6b291956",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return the second number",
            "fullTitle": "Adding numbers should return the second number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "suma.num2.should.equal(3);",
            "err": {},
            "isRoot": false,
            "uuid": "c8937b32-cec3-48ec-a46a-3cff3ffef3c7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return the max number",
            "fullTitle": "Adding numbers should return the max number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "suma.maxNumber().should.equal(10);",
            "err": {},
            "isRoot": false,
            "uuid": "eb0454ed-dd25-4732-b66d-46cd605f3899",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should say hello",
            "fullTitle": "Adding numbers should say hello",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "suma.sayHello().should.equal(\"Hi!\");",
            "err": {},
            "isRoot": false,
            "uuid": "37d806e5-c51f-4ec0-99f1-e1f85ca72163",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should throw new error",
            "fullTitle": "Adding numbers should throw new error",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "try {\n    suma.num1 = \"hi\"\n} catch (e) {\n    e.should.be.an('error')\n}",
            "err": {},
            "isRoot": false,
            "uuid": "1f2562dd-a611-4ab8-bdda-73390b1d5700",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a promise",
            "fullTitle": "Adding numbers should return a promise",
            "timedOut": false,
            "duration": 1,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "(suma.num3=2).then((res)=>{\n    res.should.not.be.an('error');\n},(err)=>{\n    err.sould.be.an('error');\n}\n);",
            "err": {
              "message": "TypeError: (intermediate value)(intermediate value).then is not a function",
              "estack": "TypeError: (intermediate value)(intermediate value).then is not a function\n    at Context.<anonymous> (test/test.js:44:23)"
            },
            "isRoot": false,
            "uuid": "1a55dd63-9432-4e1f-a2cc-ceffdab5b133",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should throw new error",
            "fullTitle": "Adding numbers should throw new error",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "expect(suma.setNum1(\"hi\")).to.throw()",
            "err": {
              "message": "Error: the data must be a number.",
              "estack": "Error: the data must be a number.\n    at Prueba.setNum1 (prueba.js:33:19)\n    at Context.<anonymous> (test/test.js:52:21)"
            },
            "isRoot": false,
            "uuid": "b9af1c03-10b4-4f76-a225-4064e52e4776",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should throw an error",
            "fullTitle": "Adding numbers should throw an error",
            "timedOut": false,
            "duration": 1,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "suma.num2 = 1\nsuma.sum.should.throw(Error);",
            "err": {
              "message": "AssertionError: expected 11 to be a function",
              "estack": "AssertionError: expected 11 to be a function\n    at Context.<anonymous> (test/test.js:56:30)"
            },
            "isRoot": false,
            "uuid": "b4ad0cf2-ca91-4cf2-92d9-faa3b4ba30a2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should throw an error",
            "fullTitle": "Adding numbers should throw an error",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "suma.num1 = 1\nsuma.num2 = \"ow\"\nsuma.sum.should.equal(\"1ow\");",
            "err": {
              "message": "Error: the data must be a number.",
              "estack": "Error: the data must be a number.\n    at Prueba.set num2 [as num2] (prueba.js:46:19)\n    at Context.<anonymous> (test/test.js:60:19)"
            },
            "isRoot": false,
            "uuid": "022471a9-57a5-44ef-bed1-42eb9a3892e9",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "3b0d27ef-cdad-4f6a-8a0f-d9c115ab2b62",
          "58a8b852-128f-422e-bf96-de98e807a334",
          "5e38f23e-412e-48be-97e4-436da87899f1",
          "cdacbbc1-eded-44d2-8aa3-de7f6b291956",
          "c8937b32-cec3-48ec-a46a-3cff3ffef3c7",
          "eb0454ed-dd25-4732-b66d-46cd605f3899",
          "37d806e5-c51f-4ec0-99f1-e1f85ca72163",
          "1f2562dd-a611-4ab8-bdda-73390b1d5700"
        ],
        "failures": [
          "e7c59b3a-d96a-4e87-8b33-0806a3e2a6db",
          "1a55dd63-9432-4e1f-a2cc-ceffdab5b133",
          "b9af1c03-10b4-4f76-a225-4064e52e4776",
          "b4ad0cf2-ca91-4cf2-92d9-faa3b4ba30a2",
          "022471a9-57a5-44ef-bed1-42eb9a3892e9"
        ],
        "pending": [],
        "skipped": [],
        "duration": 5,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 10000
  },
  "copyrightYear": 2018
}